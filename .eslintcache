[{"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitRouter.js":"1","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitFooter.js":"2","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitMenu.js":"3","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Home\\Welcome.js":"4","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\App.js":"5","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Context\\ControlFitContextHandler.js":"6","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\index.js":"7","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\PrivateRoute.js":"8","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\Login.js":"9","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\useProvideAuth.js":"10","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\reportWebVitals.js":"11","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Context\\ControlFitContext.js":"12","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\ProvideAuth.js":"13","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\i18n\\i18n.js":"14","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Billing\\BillingDetails.js":"15","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\TraineeDetails.js":"16","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\TraineeHome.js":"17","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Calendar\\AddEvent.js":"18","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Calendar\\TraineeCalendar.js":"19","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\AddTraineeDialog.js":"20","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\DetailsTab.js":"21","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\HealthTab.js":"22","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeDetailsSection.js":"23","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\ProgramTab.js":"24","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\TrackerTab.js":"25","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\Util\\DocViewer.js":"26","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeFilesUploadSection.js":"27","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\TraineeCard.js":"28","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\ImagesTab.js":"29","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\TextFieldIcon.js":"30","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeHealthUploadSection.js":"31","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\withRoot.js":"32","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\ProgramDialog.js":"33","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\regex.js":"34","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Util\\ColorlibStepIcon.js":"35","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Reuseable\\DropzoneCustom.js":"36","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\Firebase.js":"37","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\TraineeFields.js":"38","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\Util\\ScrollTop.js":"39"},{"size":1425,"mtime":1614875139816,"results":"40","hashOfConfig":"41"},{"size":342,"mtime":1614760822821,"results":"42","hashOfConfig":"41"},{"size":26395,"mtime":1615116572615,"results":"43","hashOfConfig":"41"},{"size":6746,"mtime":1614875042188,"results":"44","hashOfConfig":"41"},{"size":1879,"mtime":1615116271594,"results":"45","hashOfConfig":"41"},{"size":18522,"mtime":1615116785388,"results":"46","hashOfConfig":"41"},{"size":724,"mtime":1614866923446,"results":"47","hashOfConfig":"41"},{"size":605,"mtime":1614506081467,"results":"48","hashOfConfig":"41"},{"size":16386,"mtime":1615116276186,"results":"49","hashOfConfig":"41"},{"size":965,"mtime":1615116288887,"results":"50","hashOfConfig":"41"},{"size":362,"mtime":1610998152066,"results":"51","hashOfConfig":"41"},{"size":123,"mtime":1612358926542,"results":"52","hashOfConfig":"41"},{"size":413,"mtime":1611134057631,"results":"53","hashOfConfig":"41"},{"size":721,"mtime":1615116759669,"results":"54","hashOfConfig":"41"},{"size":12960,"mtime":1615116297654,"results":"55","hashOfConfig":"41"},{"size":31422,"mtime":1615116601773,"results":"56","hashOfConfig":"41"},{"size":14200,"mtime":1615116753338,"results":"57","hashOfConfig":"41"},{"size":23754,"mtime":1615116346864,"results":"58","hashOfConfig":"41"},{"size":16515,"mtime":1615116403693,"results":"59","hashOfConfig":"41"},{"size":13714,"mtime":1615116710107,"results":"60","hashOfConfig":"41"},{"size":17466,"mtime":1615116607576,"results":"61","hashOfConfig":"41"},{"size":10894,"mtime":1615116623015,"results":"62","hashOfConfig":"41"},{"size":11948,"mtime":1614875282211,"results":"63","hashOfConfig":"41"},{"size":12706,"mtime":1615116675238,"results":"64","hashOfConfig":"41"},{"size":3627,"mtime":1615116684701,"results":"65","hashOfConfig":"41"},{"size":257,"mtime":1614766259063,"results":"66","hashOfConfig":"41"},{"size":3082,"mtime":1614875289673,"results":"67","hashOfConfig":"41"},{"size":6579,"mtime":1615116722985,"results":"68","hashOfConfig":"41"},{"size":11336,"mtime":1615116784428,"results":"69","hashOfConfig":"41"},{"size":1889,"mtime":1614765500598,"results":"70","hashOfConfig":"41"},{"size":2351,"mtime":1614875297102,"results":"71","hashOfConfig":"41"},{"size":1005,"mtime":1614865488318,"results":"72","hashOfConfig":"41"},{"size":4277,"mtime":1615116779630,"results":"73","hashOfConfig":"41"},{"size":135,"mtime":1614014873290,"results":"74","hashOfConfig":"41"},{"size":1323,"mtime":1614875308753,"results":"75","hashOfConfig":"41"},{"size":1587,"mtime":1614862913134,"results":"76","hashOfConfig":"41"},{"size":6536,"mtime":1615116774786,"results":"77","hashOfConfig":"41"},{"size":229,"mtime":1614866725197,"results":"78","hashOfConfig":"41"},{"size":1232,"mtime":1614875400770,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"1qqf4tk",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitRouter.js",["171"],"import { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../Auth/Login\";\r\nimport PrivateRoute from \"../Auth/PrivateRoute\";\r\nimport Welcome from \"../Home/Welcome\";\r\nimport TraineeHome from \"../TraineeHome/TraineeHome\";\r\nimport TraineeCalendar from \"../Calendar/TraineeCalendar\";\r\nimport TraineeDetails from \"../TraineeDetails/TraineeDetails\";\r\nimport { useTheme, Grid } from \"@material-ui/core\";\r\nimport BillingDetails from \"../Billing/BillingDetails\";\r\n\r\nexport default function FitRouter() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Grid\r\n    container\r\n    spacing={0}\r\n    direction=\"column\"\r\n    alignItems=\"center\"\r\n    justify=\"center\"\r\n    style={{\r\n      height: \"90%\",\r\n      //paddingLeft: \"24px\", paddingRight: \"24px\", replace this with them.space\r\n      //  maxWidth: \"calc(100vw - 50px)\"}}\r\n      maxWidth: \"calc(100vw)\",\r\n    }}\r\n    //64 is the appbar and 50 is the footer\r\n  >\r\n    <Switch>\r\n\r\n        <PrivateRoute exact path=\"/\" component={Welcome}/>\r\n        <Route path=\"/login\" component={Login}/>\r\n\r\n        <PrivateRoute path=\"/trainees\" component={TraineeHome} />\r\n\r\n        <PrivateRoute path=\"/calendar\" component={TraineeCalendar} />\r\n\r\n        <PrivateRoute path=\"/billing\" component={BillingDetails} />\r\n\r\n        <PrivateRoute\r\n          exact\r\n          path=\"/traineeDetails/:id\"\r\n          component={TraineeDetails}\r\n        />\r\n\r\n    </Switch>\r\n    </Grid>\r\n\r\n  );\r\n}\r\n","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitFooter.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Navigation\\FitMenu.js",["172"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Home\\Welcome.js",["173"],"import { useAuth } from \"../Auth/ProvideAuth\";\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  CircularProgress,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ControlFitContext from \"../Context/ControlFitContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nexport default function Welcome() {\r\n  const auth = useAuth();\r\n  const { t } = useTranslation();\r\n  const [time, setTime] = useState(moment().format(\"h:mm:ss a\"));\r\n  const [weatherData, setWeatherData] = useState();\r\n  const [iconUrl, setIconUrl] = useState(\"\");\r\n  const [greeting, setGreeting] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { trainees, newTraineesAmout } = useContext(ControlFitContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const city = t(\"TEL_AVIV\");\r\n  const country = \"Israel\";\r\n\r\n  const apiKey = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\r\n  const apiUrl = process.env.REACT_APP_OPEN_WEATHER_API_URL;\r\n  const imageUrl = process.env.REACT_APP_OPEN_WEATHER_API_IMAGE_URL;\r\n\r\n  useEffect(() => {\r\n    auth.user.providerData.forEach(function (profile) {\r\n      // console.log(\"Sign-in provider: \" + profile.providerId);\r\n      // console.log(\"  Provider-specific UID: \" + profile.uid);\r\n      // console.log(\"  Name: \" + profile.displayName);\r\n      // console.log(\"  Email: \" + profile.email);\r\n      // console.log(\"  Photo URL: \" + profile.photoURL);\r\n      setName(profile.displayName);\r\n    });\r\n  }, [auth.user]);\r\n\r\n  useEffect(() => {\r\n    setGreeting(t(\"WELCOME_HELLO\"));\r\n    const timeInterval = setInterval(() => {\r\n      setTime(moment().format(\"h:mm:ss a\"));\r\n      const currentHour = moment().format(\"HH\");\r\n\r\n      if (currentHour >= 3 && currentHour < 12) {\r\n        setGreeting(t(\"WELCOME_GOOD_MORNING\"));\r\n      } else if (currentHour >= 12 && currentHour < 15) {\r\n        setGreeting(t(\"WELCOME_GOOD_AFTERNOON\"));\r\n      } else if (currentHour >= 15 && currentHour < 20) {\r\n        setGreeting(t(\"WELCOME_GOOD_EVENING\"));\r\n      } else if (currentHour >= 20) {\r\n        setGreeting(t(\"WELCOME_GOOD_NIGHT\"));\r\n      } else {\r\n        setGreeting(t(\"WELCOME_HELLO\"));\r\n      }\r\n    }, 1000);\r\n\r\n    async function fetchData() {\r\n      //TODO GET CITY AND STATE?\r\n      //console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)\r\n      let url = `${apiUrl}?q=${city},${country}&appid=${apiKey}&units=metric`;\r\n      const response = await fetch(url);\r\n      if (response.status !== 200) {\r\n        setError(t(\"WELCOME_WEATHER_ERROR\"));\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n      let icon = `${imageUrl}/${data.weather[0].icon}@2x.png`;\r\n      setIconUrl(icon);\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      clearInterval(timeInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        boxShadow:\r\n          \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 1px rgb(0 0 0 / 12%)\",\r\n        width: \"90%\",\r\n        padding: \"24px\",\r\n      }}\r\n    >\r\n      {isLoading && (\r\n        <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n          <CircularProgress size={80} />\r\n        </Grid>\r\n      )}\r\n\r\n      {auth.user && !isLoading && (\r\n        <>\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h2\"\r\n              gutterBottom\r\n              style={{ color: \"#3f51b5\" }}\r\n            >\r\n              {`${greeting} ${name}`}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {t(\"WELCOME_TODAY\")} {moment().format(\"MMMM Do YYYY\")}, {time}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n            {weatherData ? (\r\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                {city} &nbsp;\r\n                <img\r\n                  style={{ backgroundColor: \"white\" }}\r\n                  src={iconUrl}\r\n                  alt=\"weather icon\"\r\n                ></img>\r\n                &nbsp;\r\n                {weatherData.main.temp.toFixed(0) + \"C°\"}\r\n              </Typography>\r\n            ) : (\r\n              <h4 style={{ color: \"red\" }}>{error}</h4>\r\n            )}\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={6}\r\n            md={6}\r\n            sm={12}\r\n            xl={6}\r\n            style={{\r\n              marginBottom: \"15px\",\r\n              boxShadow:\r\n                \"0px 2px 1px -1px rgb(0 0 0 / 100%), 0px 1px 1px 0px rgb(0 0 0 / 95%), 0px 1px 3px 1px rgb(0 0 0 / 90%)\",\r\n            }}\r\n          >\r\n            <Card>\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                  style={{ color: \"#3f51b5\" }}\r\n                >\r\n                  {t(\"WELCOME_STATISTICS\")}\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  style={{ textAlign: \"start\" }}\r\n                >\r\n                  {t(\"WELCOME_TOTAL_TRAINEES\")}{\" \"}\r\n                  <strong>{trainees?.length} </strong>\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  style={{ textAlign: \"start\" }}\r\n                >\r\n                  {t(\"WELCOME_NEW_TRAINEES\")}{\" \"}\r\n                  <strong>{newTraineesAmout} </strong>\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n            <ButtonGroup\r\n              color=\"primary\"\r\n              aria-label=\"outlined primary button group\"\r\n            >\r\n              <Button\r\n                component={Link}\r\n                to=\"/trainees\"\r\n                style={{ fontWeight: \"bold\" }}\r\n              >\r\n                {t(\"WELCOME_SEE_TRAINEES\")}\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to=\"/billing\"\r\n                style={{ fontWeight: \"bold\" }}\r\n              >\r\n                {t(\"WELCOME_CHECK_BILLING\")}\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n",["174","175"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\App.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Context\\ControlFitContextHandler.js",["176","177"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\index.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\PrivateRoute.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\Login.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\useProvideAuth.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\reportWebVitals.js",[],["178","179"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Context\\ControlFitContext.js",[],["180","181"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Auth\\ProvideAuth.js",[],["182","183"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\i18n\\i18n.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Billing\\BillingDetails.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\TraineeDetails.js",["184"],"import {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  Fab,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  Tab,\r\n  Tabs,\r\n  useMediaQuery,\r\n  Switch,\r\n  ClickAwayListener,\r\n  makeStyles,\r\n  AppBar,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport DetailsTab from \"./Tab/DetailsTab\";\r\nimport ImagesTab from \"./Tab/ImagesTab\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TrackerTab from \"./Tab/TrackerTab\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./css/tabs.css\";\r\nimport ProgramTab from \"./Tab/ProgramTab\";\r\nimport HealthTab from \"./Tab/HealthTab\";\r\nimport {\r\n  storageRef,\r\n  updateTrainee,\r\n  updateTraineeField,\r\n  uploadFile,\r\n  addTraineesProgram,\r\n  deleteProgram,\r\n} from \"../../Util/Firebase\";\r\nimport ControlFitContext from \"../Context/ControlFitContext\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  HEALTH,\r\n  IMAGES,\r\n  PROFILE_PICTURE,\r\n  PROGRAM,\r\n  TRACKER,\r\n} from \"../../Util/TraineeFields\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport DropzoneCustom from \"../Reuseable/DropzoneCustom\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nconst mammoth = require(\"mammoth\");\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box div={3} style={{ padding: 0 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  tab1: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  large: {\r\n    width: theme.spacing(14),\r\n    height: theme.spacing(14),\r\n    border: \"5px solid #ababab\",\r\n  },\r\n  small: {\r\n    width: theme.spacing(5),\r\n    height: theme.spacing(5),\r\n  },\r\n  detailTitle: {\r\n    color: \"#767676\",\r\n  },\r\n  detailData: {\r\n    color: \"#5b6abf\", //##3f51b5\r\n  },\r\n  detailSection: {\r\n    borderLeft: \"1px solid #337ab7\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"1.2em\",\r\n  },\r\n  buttonSuccess: {\r\n    //   backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      //   backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    // top: -6,\r\n    //  left: -6,\r\n    zIndex: 1,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nexport default function TraineeDetails(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { detailedTrainee } = useContext(ControlFitContext);\r\n  const [trainee, setTrainee] = useState();\r\n  const [profilePictureRef, setProfilePictureRef] = useState(\"\");\r\n  const isTabletOrMobile = useMediaQuery(\"(max-width: 1000px)\");\r\n  const isWider = useMediaQuery(\"(max-width: 500px)\");\r\n  const [isError, setIsError] = useState(false);\r\n  const { trainees } = useContext(ControlFitContext);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      detailedTrainee &&\r\n      Object.keys(detailedTrainee).length === 0 &&\r\n      detailedTrainee.constructor === Object\r\n    ) {\r\n      //console.log(\"empty detailedTrainee\");\r\n    } else {\r\n     // console.log(\"detailedTrainee\", detailedTrainee);\r\n      setTrainee(detailedTrainee);\r\n    }\r\n  }, [detailedTrainee]);\r\n\r\n  const cacheImages = async (pics) => {\r\n    const promises = await pics.map((src) => {\r\n      return new Promise(function (resolve, reject) {\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.onload = resolve();\r\n        img.onerror = reject();\r\n      });\r\n    });\r\n\r\n    await Promise.all(promises);\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchImage() {\r\n      if (trainee && trainee.profilePicture) {\r\n        let ref = await getImageRef(trainee.profilePicture.name);\r\n        await cacheImages([trainee.profilePicture]);\r\n        setProfilePictureRef(ref);\r\n        setSuccess(true);\r\n        setProfileLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchImage();\r\n  }, [trainee]);\r\n\r\n  const getImageRef = async (filename) => {\r\n    var imagesRef = await storageRef.child(filename).getDownloadURL();\r\n    return imagesRef;\r\n  };\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (trainee) setIsLoading(false);\r\n  }, [trainee]);\r\n\r\n  useEffect(() => {\r\n    let inter = setInterval(() => {\r\n     // console.log(\"trainee search\", detailedTrainee, id, trainees);\r\n      if (!trainee && !detailedTrainee) {\r\n        let search = trainees.filter((e) => {\r\n          return e.docId === id;\r\n        });\r\n        if (search[0]) {\r\n      //    console.log(\"ser\", search);\r\n          search[0].created = search.created?.toDate();\r\n          setTrainee(search[0]);\r\n          clearInterval(inter);\r\n        }\r\n      } else {\r\n        clearInterval(inter);\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(inter);\r\n    };\r\n  }, [trainees]);\r\n\r\n  const handleDetailsUpdate = async (values) => {\r\n    try {\r\n      const traineeNew = { ...values, docId: trainee.docId };\r\n      await updateTrainee(traineeNew);\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const handleProgramUpdate = async (programList, programId, newHTML) => {\r\n    try {\r\n      await deleteProgram(programId);\r\n      let stripeedList = programList.map((p) => {\r\n        return { id: p.id };\r\n      });\r\n      let progId = await addTraineesProgram({ html: newHTML }, \"program\");\r\n      stripeedList.push({ id: progId.id });\r\n      await updateTraineeField(id, stripeedList, PROGRAM, false, false);\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProgram = async (programList, programId) => {\r\n    try {\r\n      await deleteProgram(programId);\r\n      let stripeedList = programList.map((p) => {\r\n        return { id: p.id };\r\n      });\r\n      await updateTraineeField(id, stripeedList, PROGRAM, false, false);\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = async (images, deletedName) => {\r\n    try {\r\n      await updateTraineeField(id, images, IMAGES, false, false);\r\n      await storageRef.child(deletedName).delete();\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleDeleteHealth = async (health, deletedName) => {\r\n    try {\r\n      await updateTraineeField(id, health, HEALTH, false, false);\r\n      await storageRef.child(deletedName).delete();\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleProgramAdded = (files, type) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (files && files.length > 0) {\r\n        files.forEach((e) => {\r\n          let file = e.file;\r\n          file.arrayBuffer().then((ab) => {\r\n            mammoth\r\n              .convertToHtml(\r\n                { arrayBuffer: ab },\r\n                { includeDefaultStyleMap: true }\r\n              )\r\n              .then(async (result) => {\r\n                //TODO: add marker to set if in hebrew or not\r\n                let hebrew = `<div class=\"ql-align-right ql-direction-rtl\">${result.value}</div>`;\r\n                let obj = {\r\n                  html: hebrew,\r\n                  name:\r\n                    id +\r\n                    \"/\" +\r\n                    type +\r\n                    \"/\" +\r\n                    file.name.split(\".\")[0] +\r\n                    \"-\" +\r\n                    new Date().getTime() +\r\n                    \".\" +\r\n                    file.name.split(\".\")[1],\r\n                  path: file.path,\r\n                  type: file.type,\r\n                };\r\n                try {\r\n                  let res = await addTraineesProgram(obj);\r\n                  //let res2 = \r\n                  await updateTraineeField(\r\n                    id,\r\n                    { id: res.id },\r\n                    PROGRAM,\r\n                    true\r\n                  );\r\n                } catch (e) {\r\n                  reject(e);\r\n                  return;\r\n                }\r\n                resolve();\r\n              })\r\n              .catch((e) => {\r\n                reject(e);\r\n              })\r\n              .done();\r\n          });\r\n        });\r\n      } else {\r\n        resolve();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleTrackerAdd = (newData) => {\r\n    return new Promise((resolve, reject) => {\r\n      updateTraineeField(id, newData, TRACKER, true, false)\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n\r\n  const handleTrackerUpdate = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n      // setTrainee((prevState) => ({\r\n      //   ...prevState,\r\n      //   tracker: data,\r\n      // }));\r\n      updateTraineeField(id, data, TRACKER, false, false)\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  };\r\n\r\n  const handleHealthAdded = async (files, type) => {\r\n    try {\r\n      if (files && files.length > 0) {\r\n        let health = [];\r\n        for (const e of files) {\r\n          let file = e.file;\r\n          let obj = {\r\n            name:\r\n              id +\r\n              \"/\" +\r\n              type +\r\n              \"/\" +\r\n              file.name.split(\".\")[0] +\r\n              \"-\" +\r\n              new Date().getTime() +\r\n              \".\" +\r\n              file.name.split(\".\")[1],\r\n            path: file.path,\r\n            type: file.type,\r\n          };\r\n          health.push(obj);\r\n          //let res = \r\n          await storageRef.child(obj.name).put(file);\r\n        }\r\n\r\n        await updateTraineeField(id, health, HEALTH, true, true);\r\n      }\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleImgAdded = async (files, type) => {\r\n    try {\r\n      if (files && files.length > 0) {\r\n        let images = [];\r\n        for (const e of files) {\r\n          let file = e.file;\r\n          let obj = {\r\n            name:\r\n              id +\r\n              \"/\" +\r\n              type +\r\n              \"/\" +\r\n              file.name.split(\".\")[0] +\r\n              \"-\" +\r\n              new Date().getTime() +\r\n              \".\" +\r\n              file.name.split(\".\")[1],\r\n            path: file.path,\r\n            type: file.type,\r\n          };\r\n          images.push(obj);\r\n          await storageRef.child(obj.name).put(file);\r\n        }\r\n        await updateTraineeField(id, images, IMAGES, true, true);\r\n      }\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const toggleHoverState = (state) => {\r\n    setIsHovering(!isHovering);\r\n  };\r\n  const [showProfilePicDialog, setShowProfilePicDialog] = useState(false);\r\n  const [porfilePicNew, setProfilePicNew] = useState([]);\r\n\r\n  const handleProfilePicUpdated = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      setShowProfilePicDialog(!showProfilePicDialog);\r\n      let stripped = {\r\n        name:\r\n          id +\r\n          \"/profilePicture/\" +\r\n          porfilePicNew[0].file.name.split(\".\")[0] +\r\n          \"-\" +\r\n          new Date().getTime() +\r\n          \".\" +\r\n          porfilePicNew[0].file.name.split(\".\")[1],\r\n        type: porfilePicNew[0].file.type,\r\n      };\r\n      await uploadFile(stripped.name, porfilePicNew[0].file);\r\n      await updateTraineeField(id, stripped, PROFILE_PICTURE, false, false);\r\n      setProfilePicNew([]);\r\n      return Promise.resolve();\r\n    } catch (e) {\r\n      return Promise.reject(e);\r\n    }\r\n  };\r\n\r\n  const handleOnAddProfileFile = (newFileObjs) => {\r\n    setProfilePicNew((porfilePicNew, newFileObjs));\r\n  };\r\n\r\n  const handleOnRemoveProfileFile = (deleteFileObj, index) => {\r\n    let filtered = porfilePicNew.filter((_, i) => i !== index);\r\n    setProfilePicNew(filtered);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      style={{\r\n        height: \"100%\",\r\n        margin: 0,\r\n        width: \"inherit\",\r\n      }}\r\n    >\r\n      {isError && (\r\n        <ClickAwayListener\r\n          onClickAway={() => {\r\n            setIsError(false);\r\n          }}\r\n        >\r\n          <Alert\r\n            style={{\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            severity=\"error\"\r\n          >\r\n            {isError}\r\n          </Alert>\r\n        </ClickAwayListener>\r\n      )}\r\n      {trainee && showProfilePicDialog && (\r\n        <Grid\r\n          className=\"app\"\r\n          container\r\n          justify=\"center\"\r\n          style={{\r\n            width: \"inherit\",\r\n            // margin: \"15px 0\",\r\n            justifyContent: \"space-evenly\",\r\n          }}\r\n        >\r\n          <Dialog\r\n            scroll={\"paper\"}\r\n            fullWidth={true}\r\n            open={true}\r\n            onClose={() => {\r\n              setShowProfilePicDialog(!showProfilePicDialog);\r\n            }}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth={false}\r\n            classes={{\r\n              paperFullWidth: \"dialogSizeTab\", // class name, e.g. `classes-nesting-root-x`\r\n            }}\r\n          >\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={() => {\r\n                setShowProfilePicDialog(!showProfilePicDialog);\r\n              }}\r\n            >\r\n              <Icon className=\"fas fa-times\" />\r\n            </IconButton>\r\n            <Grid item xs={12} lg={12} md={12} sm={12} xl={12} align=\"center\">\r\n              <h3>{t(\"TRAINEE_DETAILS_PROFILE\")}</h3>\r\n              <DropzoneCustom\r\n                fileObjects={porfilePicNew}\r\n                accepted={[\"image/*\"]}\r\n                limit={1}\r\n                dropzoneText={t(\"TRAINEE_DETAILS_PROFILE_UPLOAD\")}\r\n                handleOnAdd={handleOnAddProfileFile}\r\n                handleOnDelete={handleOnRemoveProfileFile}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n              <DialogActions>\r\n                <div>\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      setShowProfilePicDialog(!showProfilePicDialog);\r\n                    }}\r\n                  >\r\n                    {t(\"CANCEL\")}\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                      setSuccess(false);\r\n                      setProfileLoading(true);\r\n                      handleProfilePicUpdated(e)\r\n                        .then((res) => {})\r\n                        .catch((e) => {\r\n                          setSuccess(true);\r\n                          setProfileLoading(false);\r\n                          setIsError(t(\"TRAINEE_DETAILS_PROFILE_ERROR\"));\r\n                        });\r\n                    }}\r\n                  >\r\n                    {t(\"SUBMIT\")}\r\n                  </Button>\r\n                </div>\r\n              </DialogActions>\r\n            </Grid>\r\n          </Dialog>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        lg={12}\r\n        md={12}\r\n        sm={12}\r\n        xl={12}\r\n        align=\"center\"\r\n        className={classes.root}\r\n        style={{\r\n          // height: \"80%\",\r\n          backgroundColor: \"white\",\r\n          //  overflow: \"scroll\"\r\n        }}\r\n      >\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <Tabs\r\n              style={{ backgroundColor: \"#f3f1f2\" }}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n              value={tabValue}\r\n              onChange={handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              aria-label=\"scrollable auto tabs example\"\r\n              classes={{\r\n                flexContainer: \"spaceEven\", // class name, e.g. `classes-nesting-root-x`\r\n              }}\r\n            >\r\n              {/* <Tab\r\n            disableRipple\r\n            className={`${classes.tab1} tab1`}\r\n            icon={\r\n              <input type=\"text\" className=\"search\" placeholder=\"Search..\" />\r\n            }\r\n            {...a11yProps(0)}\r\n          /> */}\r\n\r\n              <Tab\r\n                className=\"tab2\"\r\n                label={t(\"TRAINEE_TAB_DETAILS\")}\r\n                icon={<Icon className=\"fas fa-user-tag\" />}\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                className=\"tab3\"\r\n                label={t(\"TRAINEE_TAB_PROGRAM\")}\r\n                icon={<Icon className=\"fas fa-clipboard-list\" />}\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                label={t(\"TRAINEE_TAB_TRACKER\")}\r\n                icon={<Icon className=\"fas fa-table\" />}\r\n                {...a11yProps(3)}\r\n              />\r\n              <Tab\r\n                label={t(\"TRAINEE_TAB_IMAGES\")}\r\n                icon={<Icon className=\"fas fa-images\" />}\r\n                {...a11yProps(4)}\r\n              />\r\n              <Tab\r\n                label={t(\"TRAINEE_TAB_HEALTH\")}\r\n                icon={<Icon className=\"fas fa-file-medical-alt\" />}\r\n                {...a11yProps(5)}\r\n              />\r\n            </Tabs>\r\n          </AppBar>\r\n\r\n          {trainee && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              lg={12}\r\n              md={12}\r\n              sm={12}\r\n              xl={12}\r\n              align=\"center\"\r\n              className={classes.root}\r\n              style={{ borderBottom: \"1px solid #3f51b5\" }}\r\n            >\r\n              {isTabletOrMobile ? (\r\n                <Grid\r\n                  container\r\n                  justify=\"center\"\r\n                  style={{\r\n                    height: \"100%\",\r\n                    width: \"inherit\",\r\n                    textAlign: \"start\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={4}\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={4}\r\n                    xl={4}\r\n                    align=\"center\"\r\n                    className={classes.root}\r\n                    style={{ display: \"flex\", position: \"relative\" }}\r\n                  >\r\n                    <div\r\n                      onMouseEnter={toggleHoverState}\r\n                      onMouseLeave={toggleHoverState}\r\n                    >\r\n                      <Avatar\r\n                        alt={trainee?.name}\r\n                        src={profilePictureRef}\r\n                        className={classes.large}\r\n                      />\r\n                      {/* {!isHovering &&  */}\r\n\r\n                      <Fab\r\n                        style={\r\n                          isWider\r\n                            ? { position: \"absolute\", bottom: \"0\" }\r\n                            : { position: \"absolute\", bottom: \"-20%\" }\r\n                        }\r\n                        color=\"primary\"\r\n                        variant=\"extended\"\r\n                        size={\"small\"}\r\n                        className={buttonClassname}\r\n                        onClick={(e) => {\r\n                          setShowProfilePicDialog(!showProfilePicDialog);\r\n                        }}\r\n                      >\r\n                        <Icon style={{ fontSize: \"1.4em\" }} className=\"fas fa-camera fa-lg\" />\r\n                        {profileLoading && (\r\n                          <CircularProgress\r\n                            size={34}\r\n                            className={classes.fabProgress}\r\n                          />\r\n                        )}\r\n                      </Fab>\r\n\r\n                      {/* } */}\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={4}\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={4}\r\n                    xl={4}\r\n                    align=\"center\"\r\n                    className={classes.root}\r\n                    style={{ display: \"flex\" }}\r\n                  >\r\n                    <p\r\n                      className={classes.detailData}\r\n                      style={{ fontSize: \"2em\", alignSelf: \"center\" }}\r\n                    >\r\n                      {trainee?.name}\r\n                    </p>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={4}\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={4}\r\n                    xl={4}\r\n                    align=\"center\"\r\n                    className={classes.root}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <h3>{t(\"TRAINEE_TAB_HEADER_ACTIVE\")}</h3>\r\n                    <Switch\r\n                      checked={trainee.isActive || false}\r\n                      onChange={(e) => {\r\n                        handleDetailsUpdate({ isActive: e.target.checked })\r\n                          .then((res) => {\r\n                            setIsError(false);\r\n                          })\r\n                          .catch((e) => {\r\n                            setIsError(t(\"TRAINEE_DETAILS_ACTIVE_ERROR\"));\r\n                          });\r\n                      }}\r\n                      color=\"primary\"\r\n                      name=\"checkedA\"\r\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <Grid\r\n                  container\r\n                  justify=\"center\"\r\n                  style={{\r\n                    height: \"100%\",\r\n                    width: \"inherit\",\r\n                    textAlign: \"start\",\r\n                    backgroundColor: \"white\",\r\n                  }}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={4}\r\n                    lg={4}\r\n                    md={4}\r\n                    sm={4}\r\n                    xl={4}\r\n                    align=\"center\"\r\n                    className={classes.root}\r\n                    style={{ display: \"flex\" }}\r\n                  >\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Avatar\r\n                        alt={trainee?.name}\r\n                        src={profilePictureRef}\r\n                        className={classes.large}\r\n                      />\r\n                      {/* {!isHovering &&  */}\r\n                      <Fab\r\n                        style={{ position: \"absolute\", bottom: \"-6%\" }}\r\n                        color=\"primary\"\r\n                        variant=\"extended\"\r\n                        size={\"small\"}\r\n                        className={buttonClassname}\r\n                        onClick={(e) => {\r\n                          setShowProfilePicDialog(!showProfilePicDialog);\r\n                        }}\r\n                      >\r\n                        <Icon style={{ fontSize: \"1.4em\" }} className=\"fas fa-camera fa-lg\" />\r\n                        {profileLoading && (\r\n                          <CircularProgress\r\n                            size={34}\r\n                            className={classes.fabProgress}\r\n                          />\r\n                        )}\r\n                      </Fab>\r\n\r\n                      {/* } */}\r\n                    </div>\r\n                    <p\r\n                      className={classes.detailData}\r\n                      style={{ fontSize: \"1.5em\", alignSelf: \"center\" }}\r\n                    >\r\n                      {trainee?.name}\r\n                    </p>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={3}\r\n                    lg={3}\r\n                    md={3}\r\n                    sm={3}\r\n                    xl={3}\r\n                    align=\"start\"\r\n                    className={classes.detailSection}\r\n                  >\r\n                    <p>\r\n                      <span\r\n                        className=\"far fa-calendar-alt fa-lg\"\r\n                        style={{ marginInlineEnd: \"10px\",fontSize: \"1em\" }}\r\n                      />\r\n\r\n                      <span className={classes.detailTitle}>\r\n                        {t(\"TRAINEE_TAB_HEADER_AGE\")} &nbsp;\r\n                      </span>\r\n                      <span className={classes.detailData}>\r\n                        {\" \"}\r\n                        {trainee?.age}{\" \"}\r\n                      </span>\r\n                    </p>\r\n\r\n                    <p>\r\n                      <span\r\n                        className=\"far fa-calendar-check fa-lg\"\r\n                        style={{ marginInlineEnd: \"10px\",fontSize: \"1em\" }}\r\n                      />\r\n                      <span className={classes.detailTitle}>\r\n                        {t(\"TRAINEE_TAB_HEADER_CREATED\")} &nbsp;\r\n                      </span>\r\n\r\n                      <span className={classes.detailData}>\r\n                        {/* { trainee?.created.toDate().toLocaleString(\"he-IL\", {\r\n                    month: \"numeric\",\r\n                    day: \"numeric\",\r\n                    year: \"numeric\",\r\n                  })}  */}\r\n\r\n                        {trainee?.created}\r\n                      </span>\r\n                    </p>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={3}\r\n                    lg={3}\r\n                    md={3}\r\n                    sm={3}\r\n                    xl={3}\r\n                    align=\"start\"\r\n                    className={classes.detailSection}\r\n                  >\r\n                    <p>\r\n                      <span\r\n                        className=\"fas fa-mobile-alt fa-lg\"\r\n                        style={{ marginInlineEnd: \"10px\",fontSize: \"1em\" }}\r\n                      />\r\n\r\n                      <span className={classes.detailTitle}>\r\n                        {t(\"TRAINEE_TAB_HEADER_PHONE\")} &nbsp;\r\n                      </span>\r\n                      <span className={classes.detailData}>\r\n                        {trainee?.phone}\r\n                      </span>\r\n                    </p>\r\n\r\n                    <p>\r\n                      <span\r\n                        className=\"far fa-envelope fa-lg\"\r\n                        style={{ marginInlineEnd: \"10px\",fontSize: \"1em\" }}\r\n                      />\r\n\r\n                      <span className={classes.detailTitle}>\r\n                        {t(\"TRAINEE_TAB_HEADER_EMAIL\")} &nbsp;\r\n                      </span>\r\n                      <span className={classes.detailData}>\r\n                        {trainee?.email}\r\n                      </span>\r\n                    </p>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={2}\r\n                    lg={2}\r\n                    md={2}\r\n                    sm={2}\r\n                    xl={2}\r\n                    align=\"center\"\r\n                    className={classes.detailSection}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <h3>{t(\"TRAINEE_TAB_HEADER_ACTIVE\")}</h3>\r\n                    <Switch\r\n                      checked={trainee.isActive || false}\r\n                      onChange={(e) => {\r\n                        handleDetailsUpdate({ isActive: e.target.checked })\r\n                          .then((res) => {\r\n                            setIsError(false);\r\n                          })\r\n                          .catch((e) => {\r\n                            setIsError(t(\"TRAINEE_DETAILS_ACTIVE_ERROR\"));\r\n                          });\r\n                      }}\r\n                      color=\"primary\"\r\n                      name=\"checkedA\"\r\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n\r\n          {isLoading && (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                height: \"calc(100vh - 188px)\",\r\n              }}\r\n            >\r\n              <CircularProgress size={80} />\r\n            </div>\r\n          )}\r\n\r\n          {!isLoading && (\r\n            <TabPanel value={tabValue} index={0}>\r\n              <DetailsTab\r\n                id={id}\r\n                trainee={trainee}\r\n                handleDetailsUpdate={handleDetailsUpdate}\r\n              />\r\n            </TabPanel>\r\n          )}\r\n\r\n          <TabPanel value={tabValue} index={1}>\r\n            <ProgramTab\r\n              id={id}\r\n              trainee={trainee}\r\n              handleProgramUpdate={handleProgramUpdate}\r\n              handleDeleteProgram={handleDeleteProgram}\r\n              handleProgramAdded={handleProgramAdded}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={2}>\r\n            <TrackerTab\r\n              id={id}\r\n              trainee={trainee}\r\n              handleTrackerAdd={handleTrackerAdd}\r\n              handleTrackerUpdate={handleTrackerUpdate}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={3}>\r\n            <ImagesTab\r\n              id={id}\r\n              trainee={trainee}\r\n              handleDeleteImage={handleDeleteImage}\r\n              handleImgAdded={handleImgAdded}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={tabValue} index={4}>\r\n            <HealthTab\r\n              id={id}\r\n              trainee={trainee}\r\n              handleDeleteHealth={handleDeleteHealth}\r\n              handleHealthAdded={handleHealthAdded}\r\n            />\r\n          </TabPanel>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\TraineeHome.js",["185","186"],"import { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  uploadFile,\r\n  addTrainee,\r\n  addTraineeFilesIntial,\r\n  addTraineesProgram,\r\n} from \"../../Util/Firebase\";\r\nimport TraineeCard from \"./TraineeCard\";\r\nimport AddTraineeDialog from \"../TraineeForm/AddTraineeDialog\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ScrollTop from \"./Util/ScrollTop\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ControlFitContext from \"../Context/ControlFitContext\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  Typography,\r\n  useMediaQuery,\r\n  IconButton,\r\n  InputBase,\r\n  Paper,\r\n  Grid,\r\n  Fab,\r\n  Tooltip,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  rootSearch: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nexport default function TraineeHome(props) {\r\n  const isTabletOrMobile = useMediaQuery(\"(max-width: 1000px)\");\r\n  let limit = isTabletOrMobile ? 4 : 8;\r\n  const { t } = useTranslation();\r\n  const [visibleTrainees, setVisibleTrainees] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoadingSearch, setIsLoadingSearch] = useState(false);\r\n  const [showAddTraineeDialog, setShowAddTraineeDialog] = useState(false);\r\n  const [formHistory, setFormHistory] = useState({});\r\n  const { trainees } = useContext(ControlFitContext);\r\n  const [index, setIndex] = useState(limit);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [isSearch, setIsSearch] = useState(false);\r\n  const [isScrollLoad, setIsScrollLoad] = useState(false);\r\n  const [timeLastResult, _setTimeLastResult] = useState();\r\n  const ref = useRef(timeLastResult);\r\n\r\n  const setTimeLastResult = (value) => {\r\n    _setTimeLastResult(value);\r\n    ref.current = value;\r\n  };\r\n\r\n  const classes = useStyles();\r\n  let loadingSearchTimeout = 0;\r\n  let loadingTime = 1200; //milis\r\n\r\n  useEffect(() => {\r\n    let inter = setInterval(() => {\r\n      if (new Date().getTime() - ref.current > loadingTime) {\r\n        setIsLoading(false);\r\n        clearInterval(inter);\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      setVisibleTrainees([]);\r\n      clearInterval(inter);\r\n      clearTimeout(loadingSearchTimeout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeLastResult(new Date().getTime());\r\n    setVisibleTrainees(trainees.slice(0, index));\r\n  }, [trainees]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\r\n    //   \"CONDITION\",\r\n    //   hasMore,\r\n    //   isSearch,\r\n    //   isScrollLoad,\r\n    //   trainees?.length,\r\n    //   visibleTrainees?.length\r\n    // );\r\n    // console.log(\r\n    //   \"CONDITION EVAL\",\r\n    //   hasMore &&\r\n    //     !isSearch &&\r\n    //     !isScrollLoad &&\r\n    //     trainees?.length > visibleTrainees?.length\r\n    // );\r\n    if (visibleTrainees.length <= trainees.length) {\r\n      setHasMore(true);\r\n    } else {\r\n      setHasMore(false);\r\n    }\r\n  }, [visibleTrainees, trainees]);\r\n\r\n  const getNext = () => {\r\n    if (trainees.length <= visibleTrainees.length) {\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n    setHasMore(true);\r\n    setIsScrollLoad(true);\r\n\r\n    let nextIndex = index + limit;\r\n    setIndex((prev) => prev + limit);\r\n    loadingSearchTimeout = setTimeout(() => {\r\n      setVisibleTrainees(trainees.slice(0, nextIndex));\r\n\r\n      setIsScrollLoad(false);\r\n    }, 500);\r\n  };\r\n\r\n  const getTraineeByName = (name) => {\r\n    let filtered = trainees.filter((e) => {\r\n      return e.name.toLowerCase().includes(name.toLowerCase());\r\n    });\r\n\r\n    setVisibleTrainees(filtered);\r\n\r\n    loadingSearchTimeout = setTimeout(() => {\r\n      setIsLoadingSearch(false);\r\n    }, 250);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    e.preventDefault();\r\n    setIsSearch(true);\r\n    setIsLoadingSearch(true);\r\n    setSearchValue(e.target.value);\r\n    if (!e.target.value) {\r\n      setVisibleTrainees(trainees.slice(0, limit));\r\n\r\n      setIsLoadingSearch(false);\r\n      setIsSearch(false);\r\n      setHasMore(true);\r\n      setIndex(limit);\r\n      return;\r\n    }\r\n\r\n    getTraineeByName(e.target.value);\r\n  };\r\n  // const restoreData = () => {\r\n  //   //setTrainee(formHistory);\r\n  // };\r\n  const toggleModal = () => {\r\n    setShowAddTraineeDialog(!showAddTraineeDialog);\r\n  };\r\n\r\n  const handleCancel = (e, trainee) => {\r\n    e.preventDefault();\r\n    setFormHistory(trainee);\r\n\r\n  };\r\n\r\n  const addTraineeFB = async (addedTrainee) => {\r\n    try {\r\n      let id = -1;\r\n      //console.warn(\"starting\");\r\n      let strippedTrainee = { ...addedTrainee };\r\n      delete strippedTrainee.images;\r\n      delete strippedTrainee.health;\r\n      delete strippedTrainee.program;\r\n      delete strippedTrainee.profilePicture;\r\n      //console.log(\"strippedTrainee\", strippedTrainee);\r\n\r\n      let excautionResult = await Promise.all([\r\n        (async () => {\r\n          let addTraineeRes = await addTrainee(strippedTrainee);\r\n          //console.warn(\"S1\", addTraineeRes.id);\r\n          id = addTraineeRes.id;\r\n          addedTrainee.docId = id;\r\n          var imagesUpdated = await Promise.all(\r\n            addedTrainee.images.map(async (e) => {\r\n              let newFile = {\r\n                name:\r\n                  id +\r\n                  \"/images/\" +\r\n                  e.file.name.split(\".\")[0] +\r\n                  \"-\" +\r\n                  new Date().getTime() +\r\n                  \".\" +\r\n                  e.file.name.split(\".\")[1],\r\n                path: e.file.path,\r\n                type: e.file.type,\r\n              };\r\n              await uploadFile(newFile.name, e.file);\r\n              //console.warn(\"S1-1-IMAGES\", newFile.name);\r\n              return newFile;\r\n            })\r\n          );\r\n          addedTrainee.images = imagesUpdated;\r\n      //    console.warn(\"S1-1-IMAGES-DONE\", addedTrainee.images);\r\n          await addTraineeFilesIntial(id, addedTrainee.images, \"images\");\r\n       //   console.warn(\"S2\");\r\n          if (addedTrainee.profilePicture) {\r\n            let stripped = {\r\n              name:\r\n                id +\r\n                \"/profilePicture/\" +\r\n                addedTrainee.profilePicture.name.split(\".\")[0] +\r\n                \"-\" +\r\n                new Date().getTime() +\r\n                \".\" +\r\n                addedTrainee.profilePicture.name.split(\".\")[1],\r\n              type: addedTrainee.profilePicture.type,\r\n            };\r\n            await uploadFile(stripped.name, addedTrainee.profilePicture);\r\n           // console.warn(\"S2-1-PROFILE\", stripped.name);\r\n            await addTraineeFilesIntial(id, stripped, \"profilePicture\");\r\n        //    console.warn(\"S2-2-PROFILE-DONE\", stripped.name);\r\n          }\r\n\r\n          var healthUpdated = await Promise.all(\r\n            addedTrainee.health.map(async (e) => {\r\n              let newFile = {\r\n                name:\r\n                  id +\r\n                  \"/health/\" +\r\n                  e.file.name.split(\".\")[0] +\r\n                  \"-\" +\r\n                  new Date().getTime() +\r\n                  \".\" +\r\n                  e.file.name.split(\".\")[1],\r\n                path: e.file.path,\r\n                type: e.file.type,\r\n              };\r\n              await uploadFile(newFile.name, e.file);\r\n           //   console.warn(\"S2-3-HEALTH-DONE\", newFile.name);\r\n              return newFile;\r\n            })\r\n          );\r\n          addedTrainee.health = healthUpdated;\r\n          await addTraineeFilesIntial(id, addedTrainee.health, \"health\");\r\n      //    console.warn(\"S3\", addedTrainee.health);\r\n\r\n          var programUpdated = await Promise.all(\r\n            addedTrainee.program.map(async (e) => {\r\n              let prog = {\r\n                name:\r\n                  id +\r\n                  \"/program/\" +\r\n                  e.file.name.split(\".\")[0] +\r\n                  \"-\" +\r\n                  new Date().getTime() +\r\n                  \".\" +\r\n                  e.file.name.split(\".\")[1],\r\n                path: e.file.path,\r\n                type: e.file.type,\r\n                html: e.html,\r\n              };\r\n              let progId = await addTraineesProgram(prog, \"program\");\r\n            //  console.warn(\"S3-1-program\", progId);\r\n              let progRef = { id: progId.id };\r\n              return progRef;\r\n            })\r\n          );\r\n          addedTrainee.program = programUpdated;\r\n          await addTraineeFilesIntial(id, addedTrainee.program, \"program\");\r\n        //  console.warn(\"S4\", addedTrainee.program);\r\n       //   console.warn(\"S5-DONE\");\r\n        })(),\r\n        //if i'll want to preform stuff async\r\n        // ,\r\n        // (async() => {\r\n        //   let frontEnd = await fetch(url_for_frontEnd);\r\n        //   let frontEndData = await frontEnd.json();\r\n        // })()\r\n      ]);\r\n    //  console.error(\"result from ex\", excautionResult);\r\n    } catch (e) {\r\n      console.error(\"result from ss\", e);\r\n      return Promise.reject(new Error(e));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e, trainee) => {\r\n    return addTraineeFB(trainee);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100%\",\r\n        overflow: \"auto\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <InfiniteScroll\r\n        pageStart={0}\r\n        loadMore={getNext}\r\n        hasMore={\r\n          hasMore &&\r\n          !isSearch &&\r\n          !isScrollLoad &&\r\n          trainees?.length > visibleTrainees?.length\r\n        }\r\n        loader={\r\n          <div className=\"loader\" key={0}>\r\n            {t(\"TRAINEE_HOME_LOADING\")}\r\n          </div>\r\n        }\r\n        initialLoad={false}\r\n        useWindow={false}\r\n      >\r\n        <Grid container style={{ padding: \"24px\" }}>\r\n          {showAddTraineeDialog && (\r\n            <AddTraineeDialog\r\n              onClose={toggleModal}\r\n              handleSubmit={handleSubmit}\r\n              handleCancel={handleCancel}\r\n              history={formHistory}\r\n            />\r\n          )}\r\n\r\n          <div id=\"back-to-top-anchor\" />\r\n          <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h2\"\r\n              gutterBottom\r\n              style={{ fontSize: \"2em\", marginTop: \"0.35em\" }}\r\n            >\r\n              {t(\"TRAINEE_HOME_TITLE\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={9}\r\n            lg={4}\r\n            md={4}\r\n            sm={9}\r\n            xl={4}\r\n            style={{ paddingBottom: 15 }}\r\n          >\r\n            <Paper component=\"form\" className={classes.rootSearch}>\r\n              <InputBase\r\n                style={{ textOverflow: \"ellipsis\" }}\r\n                autoFocus={true}\r\n                value={searchValue}\r\n                className={classes.input}\r\n                placeholder={t(\"TRAINEE_SEARCH\")}\r\n                onChange={handleSearchChange}\r\n                inputProps={{ \"aria-label\": \"Search Trainee\" }}\r\n              />\r\n\r\n              <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                {!isLoadingSearch ? (\r\n                  <Icon style={{ fontSize: \"1em\" }} className=\"fas fa-search\" />\r\n                ) : (\r\n                  <CircularProgress size={24} />\r\n                )}\r\n              </IconButton>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} lg={8} md={8} sm={3} xl={8} align=\"end\">\r\n            <Tooltip title=\"Add\" aria-label=\"add\" placement=\"bottom\">\r\n              <Fab\r\n                style={{ margin: 0 }}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                aria-label=\"add\"\r\n                className={classes.margin}\r\n                onClick={toggleModal}\r\n              >\r\n                <Icon className=\"fas fa-plus\" />\r\n              </Fab>\r\n            </Tooltip>\r\n          </Grid>\r\n          {isLoading &&\r\n            Array.from(new Array(6)).map((item, index) => (\r\n              <Grid\r\n                item\r\n                key={index}\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                lg={3}\r\n                xl={3}\r\n                style={{\r\n                  paddingRight: 15,\r\n                  paddingBottom: 15,\r\n                  display: \"grid\",\r\n                }}\r\n              >\r\n                <Skeleton variant=\"rect\" width={\"100%\"} height={200} />\r\n              </Grid>\r\n            ))}\r\n\r\n          {!isLoading &&\r\n            visibleTrainees &&\r\n            visibleTrainees.length > 0 &&\r\n            visibleTrainees.map((trainee) => {\r\n              return (\r\n                <Grid\r\n                  item\r\n                  key={trainee.docId}\r\n                  xs={12}\r\n                  sm={6}\r\n                  md={4}\r\n                  lg={3}\r\n                  xl={3}\r\n                  style={{\r\n                    paddingRight: 15,\r\n                    paddingBottom: 15,\r\n                    display: \"grid\",\r\n                  }}\r\n                >\r\n                  <TraineeCard trainee={trainee} />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n          {visibleTrainees && visibleTrainees.length > limit && (\r\n            <ScrollTop\r\n              style={{ visibility: \"visible\", transform: \"inherit\" }}\r\n              {...props}\r\n            >\r\n              <Fab\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                aria-label=\"scroll back to top\"\r\n              >\r\n                <Icon className=\"fas fa-arrow-up\" />\r\n              </Fab>\r\n            </ScrollTop>\r\n          )}\r\n\r\n          {!isLoading && visibleTrainees && visibleTrainees.length === 0 && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              lg={12}\r\n              md={12}\r\n              sm={12}\r\n              xl={12}\r\n              style={{ minHeight: \"300px\" }}\r\n            >\r\n              <h1>{t(\"TRAINEE_NO_RESULTS\")}</h1>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Calendar\\AddEvent.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Calendar\\TraineeCalendar.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\AddTraineeDialog.js",["187"],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n  Button,\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepConnector,\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  CircularProgress,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport ColorlibStepIcon from \"./Util/ColorlibStepIcon\";\r\nimport TraineeDetailsSection from \"./Sections/TraineeDetailsSection\";\r\nimport TraineeFilesUploadSection from \"./Sections/TraineeFilesUploadSection\";\r\nimport TraineeHealthUploadSection from \"./Sections/TraineeHealthUploadSection\";\r\nimport \"./css/dialog.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst mammoth = require(\"mammoth\");\r\n\r\nexport default function AddTraineeDialog({\r\n  onClose,\r\n  restoreData,\r\n  handleCancel,\r\n  handleSubmit,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n  const isTabletOrMobile = useMediaQuery(\"(max-width: 1000px)\");\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [newTrainee, setNewTrainee] = useState({\r\n    age: \"\",\r\n    name: \"\",\r\n    notes: \"\",\r\n    weight: \"\",\r\n    phone: \"\",\r\n    profilePicture: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    images: [],\r\n    program: [],\r\n    health: [],\r\n    tracker: [],\r\n  });\r\n\r\n  const getSteps = () => {\r\n    return [\r\n      {\r\n        keyLable: \"Trainee detals\",\r\n        title: t(\"TRAINEE_FORM_STEPPER_DETAILS_TITLE\"),\r\n        description: t(\"TRAINEE_FORM_STEPPER_DETAILS_DESCRIPTION\"),\r\n        section: \"details\",\r\n      },\r\n      {\r\n        keyLable: \"Trainee files\",\r\n        title: t(\"TRAINEE_FORM_STEPPER_FILES_TITLE\"),\r\n        description: t(\"TRAINEE_FORM_STEPPER_FILES_DESCRIPTION\"),\r\n        section: \"upload\",\r\n      },\r\n      {\r\n        keyLable: \"Trainee health statement\",\r\n        title: t(\"TRAINEE_FORM_STEPPER_HEALTH_TITLE\"),\r\n        description: t(\"TRAINEE_FORM_STEPPER_HEALTH_DESCRIPTION\"),\r\n        section: \"health\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const renderSection = () => {\r\n    switch (steps[activeStep].section) {\r\n      case \"details\":\r\n        return (\r\n          <TraineeDetailsSection\r\n            handleCancelDialog={handleCancelDialog}\r\n            handleNext={handleNext}\r\n            trainee={newTrainee}\r\n            handleDetailsSectionSubmit={handleDetailsSectionSubmit}\r\n          />\r\n        );\r\n      case \"upload\":\r\n        return (\r\n          <TraineeFilesUploadSection\r\n            handleCancelDialog={handleCancelDialog}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            images={newTrainee.images}\r\n            program={newTrainee.program}\r\n            handleUpload={handleUpload}\r\n            handleChange={handleChangeFiles}\r\n          />\r\n        );\r\n      case \"health\":\r\n        return (\r\n          <TraineeHealthUploadSection\r\n            handleCancelDialog={handleCancelDialog}\r\n            handleSubmitDialog={handleSubmitDialog}\r\n            handleBack={handleBack}\r\n            health={newTrainee.health}\r\n            handleUpload={handleUpload}\r\n            handleChange={handleChangeFiles}\r\n          />\r\n        );\r\n      default:\r\n        return \"Error\";\r\n    }\r\n  };\r\n\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setNewTrainee({\r\n      age: \"\",\r\n      name: \"\",\r\n      notes: \"\",\r\n      weight: \"\",\r\n      phone: \"\",\r\n      profilePicture: \"\",\r\n      email: \"\",\r\n      gender: \"\",\r\n      images: [],\r\n      program: [],\r\n      health: [],\r\n      tracker: [],\r\n    });\r\n  };\r\n\r\n  const handleChangeFiles = (files, type) => {\r\n    if (files && files.length > 0 && type === \"program\") {\r\n      files.forEach((e) => {\r\n        e.file.arrayBuffer().then((ab) => {\r\n          mammoth\r\n            .convertToHtml(\r\n              { arrayBuffer: ab },\r\n              { includeDefaultStyleMap: true }\r\n            )\r\n            .then((result) => {\r\n              //TODO: add marker to set if in hebrew or not\r\n              let hebrew = `<div class=\"ql-align-right ql-direction-rtl\">${result.value}</div>`;\r\n              let obj = {\r\n                html: hebrew,\r\n                file: e.file,\r\n              };\r\n              setNewTrainee((prevState) => ({\r\n                ...prevState,\r\n                [type]:\r\n                  prevState?.[type] && prevState?.[type].length > 0\r\n                    ? [...prevState[type], obj]\r\n                    : [obj],\r\n              }));\r\n           //   console.warn(\"conversion warning\", result.messages);\r\n            })\r\n            .done();\r\n        });\r\n      });\r\n    } else {\r\n      setNewTrainee((prevState) => ({\r\n        ...prevState,\r\n        [type]: files,\r\n      }));\r\n    }\r\n  };\r\n  const handleCancelDialog = (e) => {\r\n    e.preventDefault();\r\n    handleCancel(e, newTrainee);\r\n    setNewTrainee({\r\n      age: \"\",\r\n      name: \"\",\r\n      notes: \"\",\r\n      weight: \"\",\r\n      phone: \"\",\r\n      profilePicture: \"\",\r\n      email: \"\",\r\n      gender: \"\",\r\n      images: [],\r\n      program: [],\r\n      health: [],\r\n      tracker: [],\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  const handleDetailsSectionSubmit = (values) => {\r\n    setNewTrainee((prevState) => ({\r\n      ...prevState,\r\n      ...values,\r\n    }));\r\n    handleNext();\r\n  };\r\n\r\n  const handleSubmitDialog = (e) => {\r\n    e.preventDefault();\r\n    setIsSaving(true);\r\n    handleNext();\r\n    handleSubmit(e, newTrainee)\r\n      .then((res) => {\r\n        setIsError(false);\r\n        setIsSaving(false);\r\n      })\r\n      .catch((e) => {\r\n        setIsError(true);\r\n        setIsSaving(false);\r\n      });\r\n  };\r\n\r\n  const handleUpload = (files, type) => {\r\n    if (files && files.length > 0 && type === \"program\") {\r\n      files.forEach((e) => {\r\n        e.file.arrayBuffer().then((ab) => {\r\n          mammoth\r\n            .convertToHtml(\r\n              { arrayBuffer: ab },\r\n              { includeDefaultStyleMap: true }\r\n            )\r\n            .then((result) => {\r\n              //TODO: add marker to set if in hebrew or not\r\n              let hebrew = `<div class=\"ql-align-right ql-direction-rtl\">${result.value}</div>`;\r\n              let obj = {\r\n                html: hebrew,\r\n                file: e.file,\r\n              };\r\n              setNewTrainee((prevState) => ({\r\n                ...prevState,\r\n                [type]: prevState?.[type] ? [...prevState[type], obj] : [obj],\r\n              }));\r\n         //     console.warn(\"conversion warning\", result.messages);\r\n            })\r\n            .done();\r\n        });\r\n      });\r\n    } else {\r\n      setNewTrainee((prevState) => ({\r\n        ...prevState,\r\n        [type]: files,\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      scroll={\"paper\"}\r\n      fullWidth={true}\r\n      open={true}\r\n      onClose={onClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      maxWidth={false}\r\n      classes={\r\n        isTabletOrMobile\r\n          ? { paperFullWidth: \"dialogSizeMobile\" }\r\n          : {\r\n              paperFullWidth: \"dialogSize\", // class name, e.g. `classes-nesting-root-x`\r\n            }\r\n      }\r\n    >\r\n      <Grid\r\n        container\r\n        justify=\"flex-start\"\r\n        style={{\r\n          height: \"100%\",\r\n          padding: \"0 20px\",\r\n        }}\r\n      >\r\n        {/* Stepper part */}\r\n        <Grid item xs={12} lg={12} md={12} sm={12} xl={12}>\r\n          <Stepper\r\n            style={{ padding: \"12px\" }}\r\n            alternativeLabel\r\n            activeStep={activeStep}\r\n            connector={<ColorlibConnector />}\r\n          >\r\n            {steps.map(({ keyLable, title }) => (\r\n              <Step key={keyLable}>\r\n                <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                  {title}\r\n                </StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </Grid>\r\n\r\n        {/* title and description part only show on 1 tab */}\r\n        {activeStep !== steps.length &&\r\n          steps[activeStep].section === \"details\" && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              lg={12}\r\n              md={12}\r\n              sm={12}\r\n              xl={12}\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <DialogTitle\r\n                id=\"form-dialog-title\"\r\n                style={{\r\n                  padding: \"0 12px\",\r\n                }}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  className={classes.closeButton}\r\n                  onClick={onClose}\r\n                >\r\n                  <Icon className=\"fas fa-times\" />\r\n                </IconButton>\r\n                {steps[activeStep].title}\r\n              </DialogTitle>\r\n              <DialogContentText\r\n                style={{\r\n                  marginBottom: \"0\",\r\n                }}\r\n              >\r\n                {steps[activeStep].description}\r\n              </DialogContentText>\r\n            </Grid>\r\n          )}\r\n\r\n        {/* actual section part */}\r\n        {activeStep !== steps.length && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xl={12}\r\n            align=\"center\"\r\n            style={\r\n              activeStep === 0\r\n                ? {\r\n                    textAlign: \"center\",\r\n                    minHeight: \"60%\",\r\n                  }\r\n                : {\r\n                    textAlign: \"center\",\r\n                    minHeight: \"80%\",\r\n                  }\r\n            }\r\n          >\r\n            {renderSection()}\r\n          </Grid>\r\n        )}\r\n\r\n        {/* when clicking submit */}\r\n        {activeStep === steps.length && isSaving && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xl={12}\r\n            align=\"center\"\r\n            style={{\r\n              height: \"80%\",\r\n              textAlign: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </Grid>\r\n        )}\r\n        {/* after clicking submit and saving is done.  */}\r\n        {activeStep === steps.length && !isSaving && !isError && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xl={12}\r\n            align=\"center\"\r\n            style={{\r\n              height: \"80%\",\r\n              textAlign: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              alignContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1>{t(\"TRAINEE_FORM_ADD_ANOTHER\")}</h1>\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleReset}>\r\n                {t(\"TRAINEE_FORM_ADD_ANOTHER_OK\")}\r\n              </Button>\r\n              &nbsp;\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleCancelDialog}\r\n              >\r\n                {t(\"TRAINEE_FORM_ADD_ANOTHER_NO\")}\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        )}\r\n\r\n        {activeStep === steps.length && !isSaving && isError && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xl={12}\r\n            align=\"center\"\r\n            style={{\r\n              height: \"80%\",\r\n              textAlign: \"center\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              alignContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h1>{t(\"TRAINEE_FORM_ADD_ERROR\")}</h1>\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleReset}>\r\n                {t(\"TRAINEE_FORM_ADD_ERROR_TRY_AGAIN\")}\r\n              </Button>\r\n              &nbsp;\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleCancelDialog}\r\n              >\r\n                {t(\"TRAINEE_FORM_ADD_ANOTHER_NO\")}\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\DetailsTab.js",[],["188","189"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\HealthTab.js",["190"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeDetailsSection.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\ProgramTab.js",["191"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\TrackerTab.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\Util\\DocViewer.js",["192"],"import \"../css/docHelper.css\";\r\nexport default function DocViewer({html}) {\r\n\r\n    return (\r\n       <div className=\"document-container\" style={{textAlign: \"end\"}}> \r\n            <div dangerouslySetInnerHTML={{ __html: html }} />\r\n       </div>\r\n\r\n    )\r\n\r\n}","C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeFilesUploadSection.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\TraineeCard.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeDetails\\Tab\\ImagesTab.js",["193"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\TextFieldIcon.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Sections\\TraineeHealthUploadSection.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\withRoot.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\ProgramDialog.js",["194"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\regex.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeForm\\Util\\ColorlibStepIcon.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\Reuseable\\DropzoneCustom.js",[],["195","196"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\Firebase.js",["197"],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\Util\\TraineeFields.js",[],"C:\\Users\\anaelshomrai\\Desktop\\react-traning\\controlfit\\src\\components\\TraineeHome\\Util\\ScrollTop.js",[],["198","199"],{"ruleId":"200","severity":1,"message":"201","line":12,"column":9,"nodeType":"202","messageId":"203","endLine":12,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":334,"column":6,"nodeType":"206","endLine":334,"endColumn":8,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":85,"column":6,"nodeType":"206","endLine":85,"endColumn":8,"suggestions":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":471,"column":33,"nodeType":"216","messageId":"217","endLine":471,"endColumn":35},{"ruleId":"204","severity":1,"message":"218","line":575,"column":6,"nodeType":"206","endLine":575,"endColumn":22,"suggestions":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"212","replacedBy":"221"},{"ruleId":"210","replacedBy":"222"},{"ruleId":"212","replacedBy":"223"},{"ruleId":"210","replacedBy":"224"},{"ruleId":"212","replacedBy":"225"},{"ruleId":"204","severity":1,"message":"226","line":232,"column":6,"nodeType":"206","endLine":232,"endColumn":16,"suggestions":"227"},{"ruleId":"204","severity":1,"message":"228","line":86,"column":6,"nodeType":"206","endLine":86,"endColumn":8,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"230","line":91,"column":6,"nodeType":"206","endLine":91,"endColumn":16,"suggestions":"231"},{"ruleId":"200","severity":1,"message":"232","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":19},{"ruleId":"210","replacedBy":"233"},{"ruleId":"212","replacedBy":"234"},{"ruleId":"204","severity":1,"message":"235","line":50,"column":6,"nodeType":"206","endLine":50,"endColumn":15,"suggestions":"236"},{"ruleId":"200","severity":1,"message":"237","line":26,"column":8,"nodeType":"202","messageId":"203","endLine":26,"endColumn":25},{"ruleId":"200","severity":1,"message":"232","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":19},{"ruleId":"204","severity":1,"message":"238","line":53,"column":6,"nodeType":"206","endLine":53,"endColumn":15,"suggestions":"239"},{"ruleId":"200","severity":1,"message":"237","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":25},{"ruleId":"210","replacedBy":"240"},{"ruleId":"212","replacedBy":"241"},{"ruleId":"200","severity":1,"message":"242","line":30,"column":7,"nodeType":"202","messageId":"203","endLine":30,"endColumn":15},{"ruleId":"210","replacedBy":"243"},{"ruleId":"212","replacedBy":"244"},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshNotifications'. Either include it or remove the dependency array.","ArrayExpression",["245"],"React Hook useEffect has missing dependencies: 'apiKey', 'apiUrl', 'city', 'imageUrl', and 't'. Either include them or remove the dependency array.",["246"],"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getEventsRealtime' and 'getTraineesRealtime'. Either include them or remove the dependency array.",["249"],["247"],["248"],["247"],["248"],["247"],["248"],"React Hook useEffect has missing dependencies: 'detailedTrainee', 'id', and 'trainee'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'loadingSearchTimeout' and 'loadingTime'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVisibleTrainees' needs the current value of 'index'.",["252"],"'useEffect' is defined but never used.",["247"],["248"],"React Hook useEffect has a missing dependency: 'healthHandle'. Either include it or remove the dependency array.",["253"],"'DragAndDropModule' is defined but never used.","React Hook useEffect has a missing dependency: 'imgHandle'. Either include it or remove the dependency array.",["254"],["247"],["248"],"'settings' is assigned a value but never used.",["247"],["248"],{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [refreshNotifications]",{"range":"271","text":"272"},"Update the dependencies array to be: [apiKey, apiUrl, city, imageUrl, t]",{"range":"273","text":"274"},"Update the dependencies array to be: [auth.isLoading, getEventsRealtime, getTraineesRealtime]",{"range":"275","text":"276"},"Update the dependencies array to be: [detailedTrainee, id, trainee, trainees]",{"range":"277","text":"278"},"Update the dependencies array to be: [loadingSearchTimeout, loadingTime]",{"range":"279","text":"280"},"Update the dependencies array to be: [index, trainees]",{"range":"281","text":"282"},"Update the dependencies array to be: [healthHandle, trainee]",{"range":"283","text":"284"},"Update the dependencies array to be: [imgHandle, trainee]",{"range":"285","text":"286"},[10168,10170],"[refreshNotifications]",[3009,3011],"[apiKey, apiUrl, city, imageUrl, t]",[18366,18382],"[auth.isLoading, getEventsRealtime, getTraineesRealtime]",[5880,5890],"[detailedTrainee, id, trainee, trainees]",[2542,2544],"[loadingSearchTimeout, loadingTime]",[2673,2683],"[index, trainees]",[1320,1329],"[healthHandle, trainee]",[1419,1428],"[imgHandle, trainee]"]